name: Build
on:
  - pull_request
jobs:
  build-python:
    name: Python Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-ansi
      - name: Lint
        run: |
          source .venv/bin/activate
          ruff check
      - name: Format
        run: |
          source .venv/bin/activate
          ruff format --check
      - name: Mypy
        run: |
          source .venv/bin/activate
          mypy .
  build-docker:
    name: Docker Build&Publish
    runs-on: ubuntu-latest
    needs: build-python
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
      - name: Configure GCP Credentials
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
      - name: Configure GCloud Auth provider with Docker
        run: |
            gcloud auth configure-docker "${{ vars.DOCKER_ARTIFACT_REGISTRY }}"
      - name: build
        run: docker build -t ${{ github.event.repository.name }}:${{ env.COMMIT_SHORT_SHA }} .
      - name: tag
        run: |
            docker tag ${{ github.event.repository.name }}:${{ env.COMMIT_SHORT_SHA }} \
            ${{ vars.DOCKER_ARTIFACT_REGISTRY }}/\
            ${{ vars.DOCKER_ARTIFACT_PROJECT}}/\
            ${{ vars.DOCKER_ARTIFACT_REPOSITORY }}/\
            ${{ github.event.repository.name }}:${{ env.COMMIT_SHORT_SHA }}
      - name: publish
        run: |
            docker push ${{ vars.DOCKER_ARTIFACT_REGISTRY }}/\
            ${{ vars.DOCKER_ARTIFACT_PROJECT}}/\
            ${{ vars.DOCKER_ARTIFACT_REPOSITORY }}/\
            ${{ github.event.repository.name }}:${{ env.COMMIT_SHORT_SHA }}
  helm-deploy:
    name: Helm Deploy
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
      - name: Configure GCP Credentials
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
      - name: Get GKE credentials
        uses: "google-github-actions/get-gke-credentials@v2"
        with:
          cluster_name: "${{ vars.GKE_CLUSTER_NAME }}"
          location: "${{ vars.GKE_LOCATION }}"
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - name: Helm Deploy
        run: |
          helm upgrade --install ${{ github.event.repository.name }} \
          --set image.tag=${{ env.COMMIT_SHORT_SHA }} \
          --set image.repository=${{ vars.DOCKER_ARTIFACT_REGISTRY }}/\
          ${{ vars.DOCKER_ARTIFACT_PROJECT}}/\
          ${{ vars.DOCKER_ARTIFACT_REPOSITORY }}/\
          ${{ github.event.repository.name }} \
          --atomic \
          ./chart
